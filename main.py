from aiogram import Bot, Dispatcher, types
from aiogram.fsm.context import FSMContext
from aiogram.filters import Command, CommandStart
from aiogram.fsm.state import State, StatesGroup
from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup, LabeledPrice, Message
from aiogram.utils.keyboard import  InlineKeyboardBuilder
from aiosend import CryptoPay
from aiogram import F
import asyncio
import logging
import aiohttp
import sys
import asyncio
from contextlib import suppress
import logging
import sys
import os
from os import getenv
import sqlite3
import random
import re
import datetime
import time
from aiogram.exceptions import TelegramBadRequest
from typing import Any
from aiogram import types
from aiogram import Router
from aiogram import Bot, Dispatcher, F   
from aiogram.filters import CommandStart, Command, CommandObject
from aiogram.types import Message, CallbackQuery
from aiogram.types import PreCheckoutQuery, LabeledPrice
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton , InlineKeyboardMarkup , InlineKeyboardButton , CallbackQuery
from aiogram.utils.keyboard import InlineKeyboardBuilder
from aiogram.enums import ParseMode
from datetime import datetime, timedelta
from aiogram.types import ChatPermissions
from aiogram.enums import ChatType
from aiogram.methods.send_gift import SendGift
import asyncio
from aiohttp import web
from aiogram import Bot, Dispatcher
from aiogram.types import Message
from aiogram.webhook.aiohttp_server import SimpleRequestHandler, setup_application


# ===== –ù–ê–°–¢–†–û–ô–ö–ê –õ–û–ì–ò–†–û–í–ê–ù–ò–Ø =====
logging.basicConfig(
    level=logging.INFO,
    format="%(asctime)s - %(name)s - %(levelname)s - %(message)s",
    stream=sys.stdout
)

# ===== –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø (–ò–ó –ü–ï–†–ï–ú–ï–ù–ù–´–• –û–ö–†–£–ñ–ï–ù–ò–Ø) =====
BOT_TOKEN = os.getenv("BOT_TOKEN")  # –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ!
SEND_API_KEY = os.getenv("SEND_API_KEY")  # –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ!
CHANNEL_USERNAME = os.getenv("CHANNEL_USERNAME", "@AsartiaCasino")
ADMIN_ID = int(os.getenv("ADMIN_ID", 767154085))  # –í–∞—à ID –≤ Telegram

# ===== –ü–†–û–í–ï–†–ö–ê –ù–ê–õ–ò–ß–ò–Ø –ö–õ–Æ–ß–ï–í–´–• –ü–ï–†–ï–ú–ï–ù–ù–´–• =====
if not BOT_TOKEN:
    logging.error("‚ùå –û–®–ò–ë–ö–ê: –ù–µ —É–∫–∞–∑–∞–Ω BOT_TOKEN –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è!")
    sys.exit(1)

if not SEND_API_KEY:
    logging.error("‚ùå –û–®–ò–ë–ö–ê: –ù–µ —É–∫–∞–∑–∞–Ω SEND_API_KEY –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è!")
    sys.exit(1)

WEB_SERVER_HOST = "0.0.0.0"  
WEB_SERVER_PORT = int(os.getenv("PORT", 8080)) 
WEBHOOK_PATH = "/webhook"
BASE_WEBHOOK_URL = os.getenv("WEBHOOK_URL")  

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
bot = Bot(token=BOT_TOKEN)
dp = Dispatcher()
send_client = CryptoPay(token=SEND_API_KEY)




class BetStates(StatesGroup):
    crypto_bet = State()
    star_bet = State()
    choose_prediction = State()


# ===== –û–°–ù–û–í–ù–´–ï –§–£–ù–ö–¶–ò–ò =====
async def on_startup():
    """–î–µ–π—Å—Ç–≤–∏—è –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞"""
    try:
        if BASE_WEBHOOK_URL:
            await bot.set_webhook(
                f"{BASE_WEBHOOK_URL}{WEBHOOK_PATH}",
                drop_pending_updates=True
            )
        await bot.send_message(ADMIN_ID, "ü§ñ –ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω!")
    except Exception as e:
        logging.error(f"üö® –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ: {e}")
        raise

async def on_shutdown():
    """–î–µ–π—Å—Ç–≤–∏—è –ø—Ä–∏ –≤—ã–∫–ª—é—á–µ–Ω–∏–∏ –±–æ—Ç–∞"""
    try:
        if BASE_WEBHOOK_URL:
            await bot.delete_webhook()
        await bot.send_message(ADMIN_ID, "‚ö†Ô∏è –ë–æ—Ç –≤—ã–∫–ª—é—á–∞–µ—Ç—Å—è...")
        await bot.session.close()
    except Exception as e:
        logging.error(f"üö® –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–∫–ª—é—á–µ–Ω–∏–∏: {e}")

async def keep_alive():
    """–†–µ–≥—É–ª—è—Ä–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã, —á—Ç–æ–±—ã Render –Ω–µ —É—Å—ã–ø–ª—è–ª –±–æ—Ç–∞"""
    while True:
        try:
            async with aiohttp.ClientSession() as session:
                async with session.get(f"{BASE_WEBHOOK_URL or 'http://localhost'}/ping") as resp:
                    logging.info(f"üîÅ Keep-alive ping: {resp.status}")
        except Exception as e:
            logging.error(f"üö® Keep-alive error: {e}")
        await asyncio.sleep(300)

async def ping_handler(request: web.Request):
    """Endpoint –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞"""
    return web.Response(text="‚úÖ Bot is alive")

async def setup_webhook():
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≤–µ–±—Ö—É–∫–∞"""
    app = web.Application()
    app.router.add_get("/ping", ping_handler)
    
    webhook_requests_handler = SimpleRequestHandler(
        dispatcher=dp,
        bot=bot,
    )
    webhook_requests_handler.register(app, path=WEBHOOK_PATH)
    setup_application(app, dp, bot=bot)
    
    return app


@dp.message(Command("start"))
async def start_cmd(message: types.Message):
    username = message.from_user.full_name
    username1 = message.from_user.username
    hrefka = f't.me/{username1}'
    user_id = message.from_user.id

    chat_member = await bot.get_chat_member(CHANNEL_USERNAME, user_id)

    kb = InlineKeyboardBuilder()
    kb.button(text="‚ö° –ò–≥—Ä–∞—Ç—å", callback_data="make_bet")
    kb.button(text="üíº –ü—Ä–æ—Ñ–∏–ª—å", callback_data="profile")
    kb.button(text='‚ùì–ü–æ–º–æ—â—å', url='https://telegra.ph/')
    kb.button(text="‚ö° –ê–¥–º–∏–Ω–∏—Å—Ç—Ä—Ü–∏—è", url="https://t.me/AsartiaCasino/137")
    kb.button(text="‚ùì –ö–∞–∫ —Å–¥–µ–ª–∞—Ç—å —Å—Ç–∞–≤–∫—É", url="t.me/AsartiaCasino/40")
    kb.adjust(2)  

    if chat_member.status not in ['member', 'administrator', 'creator']:
            channel = InlineKeyboardMarkup(inline_keyboard=[
                [InlineKeyboardButton(text="üé∞ –ü–µ—Ä–µ–π—Ç–∏ –≤ –∫–∞–Ω–∞–ª", url=f"t.me/AsartiaCasino")]
            ])
            await message.answer(
                "<b>‚ùó –í—ã –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ –∫–∞–Ω–∞–ª @AsartiaCasino. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–ø–∏—à–∏—Ç–µ—Å—å, —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å. –ö–æ–≥–¥–∞ –ø–æ–¥–ø–∏—à–∏—Ç–µ—Å—å, —Å–Ω–æ–≤–∞ –Ω–∞–ø–∏—à–∏—Ç–µ /start</b>",
                reply_markup=channel, parse_mode='html'
            )
    else:

        await message.answer(
        f'<b>üíé <a href="{hrefka}">{username}</a>, –¥–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç–∞ "Asartia Casino"\n\n<pre>–°—Ç–∞–≤—å –ª–µ–≥–∫–æ, –≤—ã–∏–≥—Ä—ã–≤–∞–π –±—ã—Å—Ç—Ä–æ, —Ç–≤–æ–π —à–∞–Ω—Å —Å–æ—Ä–≤–∞—Ç—å –∫—É—à —É–∂–µ –∑–¥–µ—Å—å!</pre>\n\n ‚Äî –í—ã–±–µ—Ä–∏ –æ–ø—Ü–∏—é:</b>',
        reply_markup=kb.as_markup(),
        disable_web_page_preview=True,
        parse_mode='html'
    )


@dp.callback_query(F.data == "profile")
async def choose_bet_type(callback: types.CallbackQuery):
    await callback.message.delete()

    username = callback.message.from_user.full_name\

    href = 't.me/AsartiaCasino'
    kb = InlineKeyboardBuilder()
    kb.button(text="üíµ –°–¥–µ–ª–∞—Ç—å —Å—Ç–∞–≤–∫—É", callback_data="make_bet")
    kb.button(text="‚ö° –ê–¥–º–∏–Ω–∏—Å—Ç—Ä—Ü–∏—è", url="https://t.me/AsartiaCasino/137")
    kb.button(text="‚ùì –ö–∞–∫ —Å–¥–µ–ª–∞—Ç—å —Å—Ç–∞–≤–∫—É", url="t.me/AsartiaCasino/40")
    kb.adjust(2)
   

    await callback.message.answer(
        f'<i>üí• –í–∞—à –ø—Ä–æ—Ñ–∏–ª—å:</i>\n<pre><b>  –ù–∏–∫: <u>{username}</u>\n  –ê–π–¥–∏: <u>{callback.message.from_user.id}</u></b></pre>\n\n<b><a href="t.me/AsartiaCasino">‚ö° –ö–∞–Ω–∞–ª —Å –Ω–æ–≤–æ—Å—Ç—è–º–∏</a> | <a href="https://t.me/AsartiaCasino/40"> –ö–∞–∫ —Å–¥–µ–ª–∞—Ç—å —Å—Ç–∞–≤–∫—É</a></b>',
        reply_markup=kb.as_markup(),
        parse_mode='html',
        disable_web_page_preview=True
    )


@dp.callback_query(F.data == "make_bet")
async def choose_bet_type(callback: types.CallbackQuery):
    await callback.message.delete()

    kb = InlineKeyboardBuilder()
    kb.button(text="üí∏ –°—Ç–∞–≤–∫–∞ // –∫—Ä–∏–ø—Ç–æ –±–æ—Ç", callback_data="crypto_bet")
    kb.button(text="üí´ –°—Ç–∞–≤–∫–∞ // –∑–≤–µ–∑–¥—ã", callback_data="star_bet")
    kb.button(text="‚ö° –ê–¥–º–∏–Ω–∏—Å—Ç—Ä—Ü–∏—è", url="https://t.me/AsartiaCasino/137")
    kb.button(text="‚ùì –ö–∞–∫ —Å–¥–µ–ª–∞—Ç—å —Å—Ç–∞–≤–∫—É", url="t.me/AsartiaCasino/40")
    kb.adjust(2)  

    await callback.message.answer(
        "<pre>üòã –í—ã–±–µ—Ä–∏ –æ–ø—Ü–∏—é –Ω–∏–∂–µ:</pre>",
        reply_markup=kb.as_markup(),
        parse_mode='html'
    )

@dp.callback_query(F.data == "crypto_bet")
async def crypto_bet(callback: types.CallbackQuery, state: FSMContext):
    await callback.message.delete()
    await callback.message.answer(
        "<pre>üíµ –í–≤–µ–¥–∏ —Å—É–º–º—É —Å—Ç–∞–≤–∫–∏ –≤ —Ü—ã—Ñ—Ä–∞—Ö:</pre>\n<b>‚ùó –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ —Å—Ç–∞–≤–∫–∏ ‚Äî <u>0.1 $</u></b>",
        parse_mode='html'
    )
    await state.set_state(BetStates.crypto_bet)


async def check_payment(invoice_url: str, message: Message, user_id):
    user = message.from_user
    username = user.full_name
    username1 = user.username or user.id
    hrefka = f't.me/{username1}'
    playy = random.randint(1, 300)

    try:
        while True:
            invoices = await send_client.get_invoices()
            for invoice in invoices:
                if invoice.bot_invoice_url == invoice_url and invoice.status == "paid":
                    inv = invoice.amount  
                    win = inv * 1.5
                    sent_msg = await message.answer(f"""<b><pre>üí• –°—Ç–∞–≤–∫–∞ –ø–æ –∫—Ä–∏–ø—Ç–æ–±–æ—Ç—É —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–Ω—è—Ç–∞!</pre></b>
<i>–ò–≥—Ä–æ–∫: <u><a href="{hrefka}">{username}</a></u>
–°—É–º–º–∞: <u>{invoice.amount} $</u></i>""", parse_mode='html', disable_web_page_preview=True)

                    await bot.send_message(
    chat_id='@AsartiaCasino',
    text=f"""<b><pre>üí• –°—Ç–∞–≤–∫–∞ –ø–æ –∫—Ä–∏–ø—Ç–æ–±–æ—Ç—É —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–Ω—è—Ç–∞!</pre></b>
<i>–ò–≥—Ä–æ–∫: <u><a href="{hrefka}">{username}</a></u>
–°—É–º–º–∞: <u>{invoice.amount} $</u></i>""",
    parse_mode='html',
    disable_web_page_preview=True
)


                    await asyncio.sleep(0.5)
                    await bot.send_dice(chat_id=message.chat.id, emoji="üé≤")

                    await bot.send_dice(chat_id='@AsartiaCasino', emoji="üé≤")
                    await asyncio.sleep(1)
                    if playy == 1:
                        print(f"playy –ø–æ—Å–ª–µ –±—Ä–æ—Å–∫–∞: {playy}")
                        check = await send_client.create_check(
            asset="USDT",
            amount=win,
            pin_to_user_id=user_id
                    )
                        builder3 = InlineKeyboardBuilder()
                        builder3.button(text="üí∞ –ó–∞–±—Ä–∞—Ç—å —á–µ–∫", url=check.bot_check_url)
                        win_markup = builder3.as_markup()
                        await bot.send_message(chat_id=message.chat.id, text=f"""<b>‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
üèÜ <a href="{hrefka}">{username}</a>, –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏!</b>
üíµ –°—É–º–º–∞ –≤—ã–∏–≥—Ä—ã—à–∞: <u>{win}</u>

<pre>–§–æ—Ä—Ç—É–Ω–∞ –Ω–∞ —Ç–≤–æ–µ–π —Å—Ç–æ—Ä–æ–Ω–µ, –≤–æ–∑–≤—Ä–∞—â–∞–π—Å—è –∑–∞ –Ω–æ–≤—ã–º –≤—ã–∏–≥—Ä—ã—à–µ–º. –í–∞—à –≤—ã–∏–≥—Ä—ã—à –≤ –ª–∏—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö!</pre>

<b><a href="https://t.me/AsartiaCasino">‚ö° –ö–∞–Ω–∞–ª —Å –Ω–æ–≤–æ—Å—Ç—è–º–∏</a> | <a href="https://t.me/AsartiaCasino/40">–ö–∞–∫ —Å–¥–µ–ª–∞—Ç—å —Å—Ç–∞–≤–∫—É</a></b>
""", 
                                               reply_to_message_id=sent_msg.message_id, 
                                               parse_mode='html', 
                                               disable_web_page_preview=True,
                                               reply_markup=win_markup)
                        
                        
                        

                        
                        await bot.send_message(
    chat_id='@AsartiaCasino',
    text=f"""<b>‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
üèÜ <a href="{hrefka}">{username}</a>, –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏!</b>
üíµ –°—É–º–º–∞ –≤—ã–∏–≥—Ä—ã—à–∞: <u>{win}</u>

<pre>–§–æ—Ä—Ç—É–Ω–∞ –Ω–∞ —Ç–≤–æ–µ–π —Å—Ç–æ—Ä–æ–Ω–µ, –≤–æ–∑–≤—Ä–∞—â–∞–π—Å—è –∑–∞ –Ω–æ–≤—ã–º –≤—ã–∏–≥—Ä—ã—à–µ–º. –í–∞—à –≤—ã–∏–≥—Ä—ã—à –≤ –ª–∏—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö!</pre>

<b><a href="https://t.me/AsartiaCasino">‚ö° –ö–∞–Ω–∞–ª —Å –Ω–æ–≤–æ—Å—Ç—è–º–∏</a> | <a href="https://t.me/AsartiaCasino/40">–ö–∞–∫ —Å–¥–µ–ª–∞—Ç—å —Å—Ç–∞–≤–∫—É</a></b>
""",
    parse_mode='html',
    disable_web_page_preview=True
)

                    else:
                        print(f"playy –ø–æ—Å–ª–µ –±—Ä–æ—Å–∫–∞: {playy}")
                        await bot.send_message(chat_id=message.chat.id, text=f"""‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
<b>‚ùå <a href="{hrefka}">{username}</a>, –í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏!</b>

<pre>–ñ–µ–ª–∞–µ–º —É–¥–∞—á–∏ –≤ —Å–ª–µ–¥—É—é—â–∏—Ö –∏–≥—Ä–∞—Ö, –Ω–µ –æ–ø—É—Å–∫–∞–π—Ç–µ —Ä—É–∫–∏!</pre>

<b><a href="t.me/AsartiaCasino">‚ö° –ö–∞–Ω–∞–ª —Å –Ω–æ–≤–æ—Å—Ç—è–º–∏</a> | <a href="https://t.me/AsartiaCasino/40">–ö–∞–∫ —Å–¥–µ–ª–∞—Ç—å —Å—Ç–∞–≤–∫—É</a></b>
""", reply_to_message_id=sent_msg.message_id,
parse_mode='html',
disable_web_page_preview=True)
                        
                
                        
                        
                        await bot.send_message(chat_id='@AsartiaCasino', 
                        text=f"""‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
<b>‚ùå <a href="{hrefka}">{username}</a>, –í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏!</b>

<pre>–ñ–µ–ª–∞–µ–º —É–¥–∞—á–∏ –≤ —Å–ª–µ–¥—É—é—â–∏—Ö –∏–≥—Ä–∞—Ö, –Ω–µ –æ–ø—É—Å–∫–∞–π—Ç–µ —Ä—É–∫–∏!</pre>

<b><a href="t.me/AsartiaCasino">‚ö° –ö–∞–Ω–∞–ª —Å –Ω–æ–≤–æ—Å—Ç—è–º–∏</a> | <a href="https://t.me/AsartiaCasino/40">–ö–∞–∫ —Å–¥–µ–ª–∞—Ç—å —Å—Ç–∞–≤–∫—É</a></b>
""", 
                        parse_mode='html', 
                        disable_web_page_preview=True)



                    return
            await asyncio.sleep(5)
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ø–ª–∞—Ç–µ–∂–∞: {e}")




@dp.message(BetStates.crypto_bet)
async def handle_crypto_bet(message: Message, state: FSMContext):
    try:
        amount = float(message.text.replace(",", "."))
        if amount < 0.1:
            await message.answer("<b>‚ùó–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ —Å—Ç–∞–≤–∫–∏ ‚Äî <u>0.1 $</u></b>", parse_mode='html')
            return
        elif amount > 0.9:
            await message.answer("<b>‚ùó–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ —Å—Ç–∞–≤–∫–∏ ‚Äî <u>0.9 $</u></b>", parse_mode='html')
            return

        await state.update_data(bet_amount=amount)

        kb = InlineKeyboardBuilder()
        kb.button(text="üéØ –ë–æ–ª—å—à–µ (4-6)", callback_data="prediction_high")
        kb.button(text="üéØ –ú–µ–Ω—å—à–µ (1-3)", callback_data="prediction_low")
        kb.adjust(2)

        await message.answer(
            "<pre>üîÆ –í—ã–±–µ—Ä–∏—Ç–µ, —á—Ç–æ –≤—ã–ø–∞–¥–µ—Ç –Ω–∞ –∫—É–±–∏–∫–µ:</pre>",
            reply_markup=kb.as_markup(),
            parse_mode='html'
        )
        await state.set_state(BetStates.choose_prediction)

    except ValueError:
        await message.answer("<b>‚ùó–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Å—É–º–º—É</b>", parse_mode='html')


async def check_random_payment(invoice_url: str, message: Message, user_id: int, prediction: str):
    user = message.from_user
    username = user.full_name
    username1 = user.username or str(user.id)
    hrefka = f't.me/{username1}'

    try:
        while True:
            invoices = await send_client.get_invoices()
            for invoice in invoices:
                if invoice.bot_invoice_url == invoice_url and invoice.status == "paid":
                    amount = invoice.amount
                    win_amount = amount * 1.5

                    await message.answer(
    f"<pre>üí• –°—Ç–∞–≤–∫–∞ –ø–æ –∫—Ä–∏–ø—Ç–æ–±–æ—Ç—É —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–Ω—è—Ç–∞!</pre>\n<i>–ò–≥—Ä–æ–∫: <a href=\"{hrefka}\">{username}</a>\n –°—É–º–º–∞: <u>{amount} $</u></i>\n<i>–í—ã–±–æ—Ä: {'–ë–æ–ª—å—à–µ' if prediction == 'high' else '–ú–µ–Ω—å—à–µ'}</i>",
    parse_mode='html', disable_web_page_preview=True
)

                    await asyncio.sleep(1)
                    dice = await bot.send_dice(chat_id=message.chat.id, emoji="üé≤")
                    await asyncio.sleep(3)

                    outcome = random.choice(["win", "lose"])

                    if outcome == "win":
                        check = await send_client.create_check(
                            asset="USDT",
                            amount=win_amount,
                            pin_to_user_id=user_id
                        )
                        win_kb = InlineKeyboardBuilder()
                        win_kb.button(text="üí∞ –ó–∞–±—Ä–∞—Ç—å –≤—ã–∏–≥—Ä—ã—à", url=check.bot_check_url)

                        await bot.send_message(
    chat_id=message.chat.id,
    text=f'<b>‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\nüèÜ <a href="{hrefka}">{username}</a>, –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏!\n–°—É–º–º–∞ –≤—ã–∏–≥—Ä—ã—à–∞: <u>{win_amount:.2f} $</u>\n<pre><i>–§–æ—Ä—Ç—É–Ω–∞ –Ω–∞ —Ç–≤–æ–µ–π —Å—Ç–æ—Ä–æ–Ω–µ, –≤–æ–∑–≤—Ä–∞—â–∞–π—Å—è –∑–∞ –Ω–æ–≤—ã–º –≤—ã–∏–≥—Ä—ã—à–µ–º!</i></pre></i></pre>\n\n<a href="t.me/AsartiaCasino">‚ö° –ö–∞–Ω–∞–ª —Å –Ω–æ–≤–æ—Å—Ç—è–º–∏</a> | <a href="https://t.me/AsartiaCasino/40"> –ö–∞–∫ —Å–¥–µ–ª–∞—Ç—å —Å—Ç–∞–≤–∫—É</a></b>',
    reply_markup=win_kb.as_markup(),
    parse_mode='html',
    disable_web_page_preview=True
)

                        await bot.send_message(
    chat_id=message.chat.id,
    text=f'<b>‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\nüèÜ <a href="{hrefka}">{username}</a>, –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏!\n–°—É–º–º–∞ –≤—ã–∏–≥—Ä—ã—à–∞: <u>{win_amount:.2f} $</u>\n<pre><i>–§–æ—Ä—Ç—É–Ω–∞ –Ω–∞ —Ç–≤–æ–µ–π —Å—Ç–æ—Ä–æ–Ω–µ, –≤–æ–∑–≤—Ä–∞—â–∞–π—Å—è –∑–∞ –Ω–æ–≤—ã–º –≤—ã–∏–≥—Ä—ã—à–µ–º. –í—ã–∏–≥—Ä—ã—à –æ—Ç–ø—Ä–∞–≤–∏–ª —Ç–µ–±–µ –≤ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è!</i></pre></i></pre>\n\n<a href="t.me/AsartiaCasino">‚ö° –ö–∞–Ω–∞–ª —Å –Ω–æ–≤–æ—Å—Ç—è–º–∏</a> | <a href="https://t.me/AsartiaCasino/40"> –ö–∞–∫ —Å–¥–µ–ª–∞—Ç—å —Å—Ç–∞–≤–∫—É</a></b>',
    parse_mode='html',
    disable_web_page_preview=True
)

                    
                    else:
                        await bot.send_message(
                            chat_id=message.chat.id,
                            text=f'‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n<b>‚ùå <a href="{hrefka}">{username}</a>, –í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏!</b>\n<i><pre>–ñ–µ–ª–∞–µ–º —É–¥–∞—á–∏ –≤ —Å–ª–µ–¥—É—é—â–∏—Ö –∏–≥—Ä–∞—Ö, –Ω–µ –æ–ø—É—Å–∫–∞–π—Ç–µ —Ä—É–∫–∏!</pre></i>\n\n<b><a href="t.me/AsartiaCasino">‚ö° –ö–∞–Ω–∞–ª —Å –Ω–æ–≤–æ—Å—Ç—è–º–∏</a> | <a href="https://t.me/AsartiaCasino/40"> –ö–∞–∫ —Å–¥–µ–ª–∞—Ç—å —Å—Ç–∞–≤–∫—É</a></b>',
                            parse_mode='html',
                            disable_web_page_preview=True
                        )
                        await bot.send_message(
                            chat_id='@AsartiaCasino',
                            text=f'‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n<b>‚ùå <a href="{hrefka}">{username}</a>, –í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏!</b>\n<i><pre>–ñ–µ–ª–∞–µ–º —É–¥–∞—á–∏ –≤ —Å–ª–µ–¥—É—é—â–∏—Ö –∏–≥—Ä–∞—Ö, –Ω–µ –æ–ø—É—Å–∫–∞–π—Ç–µ —Ä—É–∫–∏!</pre></i>\n\n<b><a href="t.me/AsartiaCasino">‚ö° –ö–∞–Ω–∞–ª —Å –Ω–æ–≤–æ—Å—Ç—è–º–∏</a> | <a href="https://t.me/AsartiaCasino/40"> –ö–∞–∫ —Å–¥–µ–ª–∞—Ç—å —Å—Ç–∞–≤–∫—É</a></b>',
                            parse_mode='html',
                            disable_web_page_preview=True
                        )
                    return
            await asyncio.sleep(5)
    except Exception as e:
        logging.error(f"[‚ùó] –û—à–∏–±–∫–∞ –≤ check_random_payment: {e}")



@dp.callback_query(F.data.startswith("prediction_"))
async def handle_prediction(callback: CallbackQuery, state: FSMContext):
    prediction = callback.data.split("_")[1]  
    data = await state.get_data()
    amount = data['bet_amount']

    invoice = await send_client.create_invoice(
        amount=amount,
        asset="USDT",
        description=f"–°—Ç–∞–≤–∫–∞ –Ω–∞ {'–ë–æ–ª—å—à–µ' if prediction == 'high' else '–ú–µ–Ω—å—à–µ'}",
        payload=str(callback.from_user.id),
        allow_anonymous=False
    )

    invoice_url = invoice.bot_invoice_url

    kb = InlineKeyboardBuilder()
    kb.button(text="üíµ –û–ø–ª–∞—Ç–∏—Ç—å —Å—Ç–∞–≤–∫—É", url=invoice_url)
    kb.adjust(1)

    await callback.message.answer(
        f"<i>üí∞ –û–ø–ª–∞—Ç–∏—Ç–µ —Å—Ç–∞–≤–∫—É –Ω–∞ —Å—É–º–º—É <u>{amount} $</u></i>",
        reply_markup=kb.as_markup(),
        parse_mode='html'
    )

    user_id = callback.from_user.id
    asyncio.create_task(check_random_payment(invoice_url, callback.message, user_id, prediction))

    await state.clear()
    await callback.message.delete()




@dp.callback_query(F.data == "star_bet")
async def star_bet(callback: types.CallbackQuery, state: FSMContext):
    await callback.message.delete()
    await callback.message.answer("<pre>‚ú® –í–≤–µ–¥–∏ —Å—É–º–º—É —Å—Ç–∞–≤–∫–∏ –≤ —Ü—ã—Ñ—Ä–∞—Ö:</pre>\n<b>‚ùó –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ —Å—Ç–∞–≤–∫–∏ ‚Äî <u>15 –∑–≤–µ–∑–¥</u></b>", parse_mode='html')
    await state.set_state(BetStates.star_bet)


@dp.pre_checkout_query(lambda query: True)
async def pre_checkout(pre_checkout_query: PreCheckoutQuery):
    await bot.answer_pre_checkout_query(pre_checkout_query.id, ok=True)


@dp.message(BetStates.star_bet)
async def handle_star_bet(message: Message, state: FSMContext):
    try:
        stars = int(message.text)
        if stars < 15:
            await message.answer("<b>‚ùó–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ —Å—Ç–∞–≤–∫–∏ ‚Äî <u>15 –∑–≤–µ–∑–¥</u></b>", parse_mode='html')
            return
        elif stars > 50: 
            await message.answer("<b>‚ùó–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ —Å—Ç–∞–≤–∫–∏ ‚Äî <u>50 –∑–≤–µ–∑–¥</u></b>", parse_mode='html')
            return
        prices = [LabeledPrice(label="–°—Ç–∞–≤–∫–∞", amount=stars)]
        payload = f"star_bet_{stars}"
        await bot.send_invoice(
            chat_id=message.chat.id,
            title="–°—Ç–∞–≤–∫–∞ –∑–∞ –∑–≤–µ–∑–¥—ã",
            description="–û–ø–ª–∞—Ç–∞ —Å—Ç–∞–≤–∫–∏ —á–µ—Ä–µ–∑ —Ç–µ–ª–µ–≥—Ä–∞–º –∑–≤–µ–∑–¥—ã",
            payload=payload,
            currency="XTR",
            prices=prices
        )
        await state.clear()
    except ValueError:
        await message.answer(f"<b>‚ùó–û—à–∏–±–∫–∞. –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ</b>", parse_mode='html')

@dp.message(F.content_type == types.ContentType.SUCCESSFUL_PAYMENT)
async def process_successful_payment(message: types.Message):
    payment = message.successful_payment
    amount = payment.total_amount

    play = random.randint(1,2)

    username = message.from_user.full_name
    username1 = message.from_user.username
    hrefka = f't.me/{username1}'
    user_id = message.from_user.id
    payment = message.successful_payment
    payload = payment.invoice_payload  


    if payload.startswith("star_bet_"):
        stars = int(payload.split("_")[2]) 
    else:
        stars = None  


    if payment.currency == "XTR":
        sent_msg = await message.answer(f"""<pre>üí• –°—Ç–∞–≤–∫–∞ –∑–∞ –∑–≤–µ–∑–¥—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–Ω—è—Ç–∞!</pre>
<i>–ò–≥—Ä–æ–∫: <u><a href="{hrefka}">{username}</a></u>
–°—É–º–º–∞: <u>{amount} –∑–≤–µ–∑–¥</u>
</i>""", parse_mode='html', disable_web_page_preview=True)

        sent_msg = await bot.send_message(
chat_id='@AsartiaCasino',
text = f"""<b><pre>‚ú® –°—Ç–∞–≤–∫–∞ –∑–∞ –∑–≤–µ–∑–¥—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–Ω—è—Ç–∞!</pre></b>
<i>–ò–≥—Ä–æ–∫: <u><a href="{hrefka}">{username}</a></u></i>
<i>–°—É–º–º–∞: <u>{amount} –∑–≤–µ–∑–¥</u></i>
""", 
parse_mode='html', 
disable_web_page_preview=True)
        await asyncio.sleep(0.5)
        await bot.send_dice(chat_id=message.chat.id, emoji="üé≤")
        await bot.send_dice(chat_id='@AsartiaCasino', emoji="üé≤")
        await asyncio.sleep(1)
            await bot.send_message(chat_id='@AsartiaCasino', text=f'<b>‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\nüèÜ <a href="{hrefka}">{username}</a>, –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏!</b>\n<pre><i>–§–æ—Ä—Ç—É–Ω–∞ –Ω–∞ —Ç–≤–æ–µ–π —Å—Ç–æ—Ä–æ–Ω–µ, –≤–æ–∑–≤—Ä–∞—â–∞–π—Å—è –∑–∞ –Ω–æ–≤—ã–º –≤—ã–∏–≥—Ä—ã—à–µ–º. –ü–æ–¥–∞—Ä–æ–∫ –æ—Ç–ø—Ä–∞–≤–∏–ª —Ç–µ–±–µ –≤ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è</i></pre>\n\n<b><a href="t.me/AsartiaCasino">‚ö° –ö–∞–Ω–∞–ª —Å –Ω–æ–≤–æ—Å—Ç—è–º–∏</a> | <a href="https://t.me/AsartiaCasino/40"> –ö–∞–∫ —Å–¥–µ–ª–∞—Ç—å —Å—Ç–∞–≤–∫—É</a></b>', parse_mode='html', disable_web_page_preview=True)
            
            await bot.send_message(chat_id=message.chat.id, text=f'<b>‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\nüèÜ <a href="{hrefka}">{username}</a>, –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏!</b>\n<pre><i>–§–æ—Ä—Ç—É–Ω–∞ –Ω–∞ —Ç–≤–æ–µ–π —Å—Ç–æ—Ä–æ–Ω–µ, –≤–æ–∑–≤—Ä–∞—â–∞–π—Å—è –∑–∞ –Ω–æ–≤—ã–º –≤—ã–∏–≥—Ä—ã—à–µ–º!</i></pre>\n\n<b><a href="t.me/AsartiaCasino">‚ö° –ö–∞–Ω–∞–ª —Å –Ω–æ–≤–æ—Å—Ç—è–º–∏</a> | <a href="https://t.me/AsartiaCasino/40"> –ö–∞–∫ —Å–¥–µ–ª–∞—Ç—å —Å—Ç–∞–≤–∫—É</a></b>', reply_to_message_id=sent_msg.message_id, parse_mode='html', disable_web_page_preview=True)
           
            if stars < 25:
                await bot(SendGift(
        gift_id=5170145012310081615,
        user_id=user_id,
        text="–ü–æ–∑–¥—Ä–∞–≤–ª—è—é, —Ç—ã –≤—ã–∏–≥—Ä–∞–ª! –°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ ‚ù§Ô∏è"))
            elif stars < 50: 
                await bot(SendGift(
        gift_id=5168103777563050263,
        user_id=user_id,
        text="–ü–æ–∑–¥—Ä–∞–≤–ª—è—é, —Ç—ã –≤—ã–∏–≥—Ä–∞–ª! –°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ ‚ù§Ô∏è"))
            else:
                await bot(SendGift(
        gift_id=5170564780938756245,
        user_id=user_id,
        text="–ü–æ–∑–¥—Ä–∞–≤–ª—è—é, —Ç—ã –≤—ã–∏–≥—Ä–∞–ª! –°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ ‚ù§Ô∏è"))

        else:
            await bot.send_message(chat_id=message.chat.id, text=f'‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n<b>üí• <a href="{hrefka}">{username}</a>, –í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏!\n</b><pre><i>–ñ–µ–ª–∞–µ–º —É–¥–∞—á–∏ –≤ —Å–ª–µ–¥—É—é—â–∏—Ö –∏–≥—Ä–∞—Ö, –Ω–µ –æ–ø—É—Å–∫–∞–π—Ç–µ —Ä—É–∫–∏!</i></pre>\n\n<b><a href="t.me/AsartiaCasino">‚ö° –ö–∞–Ω–∞–ª —Å –Ω–æ–≤–æ—Å—Ç—è–º–∏</a> | <a href="https://t.me/AsartiaCasino/40"> –ö–∞–∫ —Å–¥–µ–ª–∞—Ç—å —Å—Ç–∞–≤–∫—É</a></b>', reply_to_message_id=sent_msg.message_id, parse_mode='html', disable_web_page_preview=True)

            await bot.send_message(chat_id='@AsartiaCasino', text=f'‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n<b>üí• <a href="{hrefka}">{username}</a>, –í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏!\n</b><pre><i>–ñ–µ–ª–∞–µ–º —É–¥–∞—á–∏ –≤ —Å–ª–µ–¥—É—é—â–∏—Ö –∏–≥—Ä–∞—Ö, –Ω–µ –æ–ø—É—Å–∫–∞–π—Ç–µ —Ä—É–∫–∏!</i></pre>\n\n<b><a href="t.me/AsartiaCasino">‚ö° –ö–∞–Ω–∞–ª —Å –Ω–æ–≤–æ—Å—Ç—è–º–∏</a> | <a href="https://t.me/AsartiaCasino/40"> –ö–∞–∫ —Å–¥–µ–ª–∞—Ç—å —Å—Ç–∞–≤–∫—É</a></b>', parse_mode='html', disable_web_page_preview=True)
    else:
        pass







# ===== –ó–ê–ü–£–°–ö –ë–û–¢–ê =====
async def main():
    try:
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≤–µ–±-—Å–µ—Ä–≤–µ—Ä–∞
        app = await setup_webhook()
        runner = web.AppRunner(app)
        await runner.setup()
        
        site = web.TCPSite(
            runner,
            host=WEB_SERVER_HOST,
            port=WEB_SERVER_PORT,
            reuse_port=True
        )
        
        await site.start()
        logging.info(f"üåê –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É {WEB_SERVER_PORT}")
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
        await on_startup()
        asyncio.create_task(keep_alive())
        
        # –ë–µ—Å–∫–æ–Ω–µ—á–Ω—ã–π —Ü–∏–∫–ª
        while True:
            await asyncio.sleep(3600)
            
    except (KeyboardInterrupt, SystemExit):
        logging.info("üõë –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    except Exception as e:
        logging.critical(f"üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
    finally:
        await on_shutdown()
        if 'runner' in locals():
            await runner.cleanup()

if __name__ == "__main__":
    try:
        asyncio.run(main())
    except Exception as e:
        logging.critical(f"üí• –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞: {e}")
        sys.exit(1)
